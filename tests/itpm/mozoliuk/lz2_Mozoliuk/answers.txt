1. Використання окремих гілок під час виконання задач надає програмістам ряд переваг, серед яких:
- можливість працювати і вносити зміни в існуючу кодову базу без страху, що внаслідок
дій розробника основний код програми буде "зламано";
- можливість зберігання різних версій програми в одному репозиторій та використання їх за потреби;
- можливість проводити код ревʼю лише змінених частин коду, а не всієї програми;
- можливість вести одночасно командну розробку над різною функціональністю.

2.  Захист гілок  від злиття без проходження код ревʼю старшими
розробниками є необхідним, оскільки є практики і підходи до написання читабельного і функціонального коду.
Досвідчені розробнки під час ревʼю можуть визначати потенційно проблемні моменти реалізації певної функціональності
та пропонувати інші більш ефективні або практичні рішення. Захист гілок від злиття дозволяє мінімізувати 
кількість помилок в продукті, та захищає від не бажаних або "шкідливих" змін, які були зроблені випадково або умисно 
іншими розробниками.

3. Було виявлено дефект, який необхідно терміново виправити. Без
CI/CD розробник виправляє дефект, відправляє тестувальнику, який
підтверджує, що даний дефект виправлено. Але зміни які вніс розробник 
створили два нових дефекти, які впливають на роботу системи. При CI/CD ми
можемо перевіряти, чи порушують роботу програми зміни коду, які ми вносимо
до системи. Це досягається шляхом автоматичного виконання тестів, які
перевіряють важливу функціональність і працездатність системи.