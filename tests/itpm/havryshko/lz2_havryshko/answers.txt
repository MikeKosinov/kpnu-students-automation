1. Використання окремих гілок для виконання завдань

Використання окремих гілок у системах контролю версій (наприклад, Git) дозволяє:
	1.	Ізоляцію розробки: Кожне завдання чи функція розробляється в окремій гілці, що мінімізує ризик конфліктів коду.
	2.	Спрощення командної роботи: Різні розробники можуть працювати над своїми завданнями без впливу на головну гілку (main або master).
	3.	Легкість тестування: Зміни можна протестувати окремо до їх злиття в основну гілку.
	4.	Контроль версій: Легше відстежувати історію внесення змін для кожної окремої задачі.


2. Захист гілок від злиття без проходження код ревʼю старшими розробниками
Це налаштування забезпечує:
	1.	Якість коду: Код перевіряється старшими розробниками для виявлення помилок, недоліків та забезпечення відповідності стандартам.
	2.	Безпеку основної гілки: Захищає основну гілку (main) від помилок чи некоректного коду.
	3.	Підтримку стандартів: Переконує, що всі зміни відповідають проектним вимогам.


3 Для чого необхідний CI/CD процес, та яке значення він має у управлінні проектами

CI/CD (Continuous Integration/Continuous Deployment) – це практика автоматизації інтеграції та розгортання коду, яка забезпечує швидкий і надійний розвиток продукту.

Значення:
	1.	Швидка інтеграція: Автоматичні збірки забезпечують інтеграцію коду після кожного внесення змін.
	2.	Тестування: CI/CD запускає тести на кожному етапі, що дозволяє швидко знаходити помилки.
	3.	Прискорення релізів: Автоматизація зменшує час, необхідний для розгортання нових версій.
	4.	Мінімізація людського фактору: Зменшення ризику помилок завдяки автоматизованим процесам.
